#!/bin/sh
set -eu
[ "${SKIP_ORG_MD-}" = "1" ] && { echo "[pre-commit] Skipping"; exit 0; }
command -v emacs >/dev/null 2>&1 || { echo "[pre-commit] ERROR: emacs not found" >&2; exit 1; }

ELISP="./.githooks/org-to-gfm.el"

FILES=$(git diff --cached --name-only --diff-filter=ACM -- '*.org' || true)
[ -z "$FILES" ] && { echo "[pre-commit] No staged .org files; nothing to do."; exit 0; }

PAIRS="'("
for org in $FILES; do
  md=$(printf '%s' "$org" | sed 's/\.org$/\.md/')
  q_org=$(printf '%s' "$org" | sed 's/"/\"/g')
  q_md=$(printf '%s' "$md"  | sed 's/"/\"/g')
  PAIRS="$PAIRS(\"$q_org\" . \"$q_md\") "
done
PAIRS="$PAIRS)"

emacs -Q --batch --eval '(setq load-no-message t inhibit-message t message-log-max nil)' -l "$ELISP" --eval "(let* ((pairs $PAIRS))
           (dolist (p pairs)
             (let* ((org (car p)) (md (cdr p))
                    (buf (find-file-noselect org)))
               (with-current-buffer buf
                 (readme/to-markdown md))
               (kill-buffer buf))))"

for org in $FILES; do
  md=$(printf '%s' "$org" | sed 's/\.org$/\.md/')
  git add -- "$md"
done
echo "[pre-commit] Orgâ†’MD done"
