#+title: A git Hook to Generate Github Flavored Markdown files from Org documents
#+author: Aidan Prior
#+date: 2025-09-12
#+options: toc:nil

Github's web markdown viewer supports =README.org= files, but its feature list is lacking compared to =README.md= files.

This precommit script tries to reconcile that, by converting org files to markdown file.

* About
A fork of [[https://github.com/jeffkreeftmeijer/readme.el][jeffkreeftmeijer/readme.el]] as a portable git hook to avoid including unnecessary submodules in your repos

* Features

1. Adds support for _G_​ithub _F_​lavored _M_​arkdown's alerts.

  Turning: 
#+begin_src org
#+begin_note
  This is a note
#+end_note
#+end_src

  Into:
#+begin_note
  This is a note
#+end_note

  For all GFM alert styles.

  /(NOTE, TIP, WARNING, CAUTION, IMPORTANT)/

2. Adds support for =org='s results blocks as =<details>= html code that is rendered nicely by Github
  For example
#+begin_src sh :results output verbatium :exports both
cowsay "That's pretty neat!"
#+end_src

#+RESULTS:
:  _____________________
: < That's pretty neat! >
:  ---------------------
:         \   ^__^
:          \  (oo)\_______
:             (__)\       )\/\
:                 ||----w |
:                 ||     ||

* Getting Started
** Prerequisites
It assumes you have =emacs= installed.

/This feels like a fairly safe assumption if you are editing =org= files./
** Installation

You can use this tool in two ways:

*** Option 1: Manual Git Hooks Installation

Install with the following curl command:
    #+begin_warning
    Always inspect scripts you intend to run on your computer. Do not trust me.
    #+end_warning
    #+begin_src sh :results output code :exports both
    curl -fsSL "https://raw.githubusercontent.com/aidanprior/org-to-gfm-readme-md/refs/heads/main/install.sh" | sh
    #+end_src

#+RESULTS:
#+begin_src sh
➡️  Fetching pinned elisp…
✅ Installed:
  - .githooks/org-to-gfm.el  (ox-gfm @ bd85f6a, ox-md-title @ 0.3.0)
  - .githooks/pre-commit
Git configured: core.hooksPath -> .githooks

Next:
  git add .githooks/org-to-gfm.el .githooks/pre-commit
  git commit -m 'chore: installed org→gfm pre-commit'
  # Test: edit & stage an .org file, then 'git commit'

#+end_src

As you can see, it creates the pre-commit script files, and configures =git= to use them.
From there, follow the next steps. Commit org files, and watch them convert automatically

*** Option 2: Pre-commit Framework (Recommended)

If you prefer using the [[https://pre-commit.com/][pre-commit framework]], you can use this hook without running the install script:

1. Install pre-commit:
   #+begin_src sh
   pip install pre-commit
   #+end_src

2. First, you still need the elisp dependencies. Run just the elisp setup:
   #+begin_src sh
   curl -fsSL "https://raw.githubusercontent.com/aidanprior/org-to-gfm-readme-md/refs/heads/main/install.sh" | sh -s -- --elisp-only
   #+end_src

3. Create =.pre-commit-config.yaml= in your repository:
   #+begin_src yaml
   repos:
     - repo: https://github.com/aidanprior/org-to-gfm-readme-md
       rev: main  # or use a specific tag/commit
       hooks:
         - id: org-to-gfm
   #+end_src

4. Install the pre-commit hook:
   #+begin_src sh
   pre-commit install
   #+end_src

5. Test it:
   #+begin_src sh
   # Edit an .org file, stage it, and commit
   git add README.org
   git commit -m "test conversion"
   #+end_src

The pre-commit framework approach gives you better control over hook execution and integrates well with other code quality tools.

*** Which Option Should You Choose?

- *Manual Git Hooks* (Option 1): 
  - ✅ Simple, standalone solution
  - ✅ No additional Python dependencies
  - ✅ Works immediately after running install.sh
  - ❌ Less integration with modern development workflows
  - ❌ Harder to manage multiple hooks

- *Pre-commit Framework* (Option 2): 
  - ✅ Better integration with modern development workflows
  - ✅ Easy to manage multiple hooks and formatting tools
  - ✅ Supports hook versioning and updates
  - ✅ Can run hooks on CI/CD systems
  - ❌ Requires Python and pre-commit installation
  - ❌ Slightly more complex setup

Both options use the same core conversion logic and produce identical results.

* Bugs
        If you encounter any bugs, please use the issues tab.
        If you can fix them yourself, please still create an issue and then a pull request that mentions it
